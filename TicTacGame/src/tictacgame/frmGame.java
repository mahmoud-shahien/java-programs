/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tictacgame;

import java.awt.Color;
import java.awt.Component;
import java.util.LinkedList;
import java.util.Random;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author convert
 */
public class frmGame extends javax.swing.JFrame {

    /**
     * Creates new form frmGame
     */
    public frmGame() {

        initComponents();
    }
    String type, fplayer, splayer;
    private boolean isFirstPlayerOn = true;
    private boolean isScorAdd = false;
    private boolean isGameEnd = false;

    int XOcounter = 0;

    public frmGame(String type, String fplayer) {

        initComponents();
        this.fplayer = fplayer;
        this.type = type;
        lbltype.setText(type + " Game");

        lblSplayer.setText("O -Computer");
        lblFplayer.setText("X -" + fplayer);
        lblFplayer.setBackground(Color.yellow);
        lblSplayer.setBackground(Color.yellow);
        labelSetNames();
    }

    public frmGame(String type, String fplayer, String splayer) {

        initComponents();
        this.fplayer = fplayer;
        this.splayer = splayer;
        this.type = type;
        lbltype.setText(type + " Game");
        lblFplayer.setText("X -" + fplayer);
        lblSplayer.setText("O -" + splayer);
        labelSetNames();
        lblFplayer.setBackground(Color.yellow);
        lblSplayer.setBackground(Color.yellow);
        lblFplayer.setOpaque(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        gamePanel = new javax.swing.JPanel();
        lbl9 = new javax.swing.JLabel();
        lbl8 = new javax.swing.JLabel();
        lbl7 = new javax.swing.JLabel();
        lbl6 = new javax.swing.JLabel();
        lbl5 = new javax.swing.JLabel();
        lbl4 = new javax.swing.JLabel();
        lbl3 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        lbl1 = new javax.swing.JLabel();
        lblFplayer = new javax.swing.JLabel();
        lblScorX = new javax.swing.JLabel();
        lblScorO = new javax.swing.JLabel();
        lblSplayer = new javax.swing.JLabel();
        lblXO = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnRestart = new javax.swing.JButton();
        lbltype = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\convert\\Documents\\NetBeansProjects\\TicTacGame\\images\\board_3.png")); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, -1, -1));

        gamePanel.setBackground(new java.awt.Color(204, 255, 255));
        gamePanel.setLayout(new java.awt.GridLayout(3, 3, 8, 8));

        lbl9.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        lbl9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl9MouseClicked(evt);
            }
        });
        gamePanel.add(lbl9);

        lbl8.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        lbl8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl8MouseClicked(evt);
            }
        });
        gamePanel.add(lbl8);

        lbl7.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        lbl7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl7MouseClicked(evt);
            }
        });
        gamePanel.add(lbl7);

        lbl6.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        lbl6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl6MouseClicked(evt);
            }
        });
        gamePanel.add(lbl6);

        lbl5.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        lbl5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl5MouseClicked(evt);
            }
        });
        gamePanel.add(lbl5);

        lbl4.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        lbl4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl4MouseClicked(evt);
            }
        });
        gamePanel.add(lbl4);

        lbl3.setBackground(new java.awt.Color(204, 204, 204));
        lbl3.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        lbl3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl3MouseClicked(evt);
            }
        });
        gamePanel.add(lbl3);

        lbl2.setBackground(new java.awt.Color(204, 204, 204));
        lbl2.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        lbl2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl2MouseClicked(evt);
            }
        });
        gamePanel.add(lbl2);

        lbl1.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        lbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl1MouseClicked(evt);
            }
        });
        gamePanel.add(lbl1);

        jPanel1.add(gamePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 300, 300));

        lblFplayer.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblFplayer.setText("X player :");
        jPanel1.add(lblFplayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 110, -1));

        lblScorX.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblScorX.setText("0");
        jPanel1.add(lblScorX, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 40, -1));

        lblScorO.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblScorO.setText("0");
        jPanel1.add(lblScorO, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, 50, -1));

        lblSplayer.setBackground(new java.awt.Color(204, 204, 204));
        lblSplayer.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblSplayer.setText("O player :");
        jPanel1.add(lblSplayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 120, -1));

        lblXO.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        lblXO.setText("0");
        jPanel1.add(lblXO, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, 20, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 90, -1));

        btnRestart.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRestart.setText("Restart");
        btnRestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestartActionPerformed(evt);
            }
        });
        jPanel1.add(btnRestart, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 530, -1, -1));

        lbltype.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbltype.setText("Single Game");
        jPanel1.add(lbltype, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 180, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestartActionPerformed
        resetLbls();
        // if it single game and the computer Win the last game 
        // I make the computer start the game 
        if (type.equals("single") & isFirstPlayerOn == false) {
            isGameEnded(new JLabel());
        }
    }//GEN-LAST:event_btnRestartActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        frmMain main = new frmMain();
        main.setLocationRelativeTo(null);
        main.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void lbl9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl9MouseClicked
        isGameEnded(lbl9);
    }//GEN-LAST:event_lbl9MouseClicked

    private void lbl8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl8MouseClicked
        isGameEnded(lbl8);
    }//GEN-LAST:event_lbl8MouseClicked

    private void lbl7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl7MouseClicked
        isGameEnded(lbl7);
    }//GEN-LAST:event_lbl7MouseClicked

    private void lbl6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl6MouseClicked
        isGameEnded(lbl6);
    }//GEN-LAST:event_lbl6MouseClicked

    private void lbl5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl5MouseClicked
        isGameEnded(lbl5);
    }//GEN-LAST:event_lbl5MouseClicked

    private void lbl4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl4MouseClicked
        isGameEnded(lbl4);
    }//GEN-LAST:event_lbl4MouseClicked

    private void lbl3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl3MouseClicked
        isGameEnded(lbl3);
    }//GEN-LAST:event_lbl3MouseClicked

    private void lbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl2MouseClicked
        isGameEnded(lbl2);
    }//GEN-LAST:event_lbl2MouseClicked

    private void lbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl1MouseClicked
        isGameEnded(lbl1);

    }//GEN-LAST:event_lbl1MouseClicked
    Random rand;
    boolean compOn;

    private void isGameEnded(JLabel pressedLbl) {
        if (isGameEnd) {
            return;
        }
        if (type.equals("double")) {
            if (pressedLbl.getText().equals("")) {
                if (isFirstPlayerOn) {
                    pressedLbl.setText("X");
                    pressedLbl.setForeground(Color.red);
                    isFirstPlayerOn = false;
// لجعل اسم اللاعب اللى عليه الدور باللون الاصفر
                    lblFplayer.setOpaque(false);
                    lblSplayer.setOpaque(true);
                } else {
                    pressedLbl.setText("O");
                    pressedLbl.setForeground(Color.blue);
                    isFirstPlayerOn = true;
                    lblFplayer.setOpaque(true);
                    lblSplayer.setOpaque(false);

                }

                checkIsWinner();

            }
        }
        //  كيف سيلعب الكمبيوتر في حال كان شخص واحد يلعب اللعبة
        if (type.equals("single")) {
            if (isFirstPlayerOn) {
                if (pressedLbl.getText().equals("")) {
                    pressedLbl.setText("X");
                    pressedLbl.setForeground(Color.red);
                    checkIsWinner();
                    if (isGameEnd) {
                        return;
                    }
                    isFirstPlayerOn = false;
                }

            }
            // دور الكمبيوتر 
            if (!isFirstPlayerOn) {
                compOn = true;
                if (XOcounter >= 2) {
                    getBestChoise(lbl1, lbl2, lbl3, "O");
                    if (compOn) {getBestChoise(lbl4, lbl5, lbl6, "O");}else {return ;}
                    if (compOn) {getBestChoise(lbl7, lbl8, lbl9, "O");}else {return ;}
                    if (compOn) {getBestChoise(lbl1, lbl4, lbl7, "O");}else {return ;}
                    if (compOn) {getBestChoise(lbl2, lbl5, lbl8, "O");}else {return ;}
                    if (compOn) {getBestChoise(lbl3, lbl6, lbl9, "O");}else {return ;}
                    if (compOn) {getBestChoise(lbl1, lbl5, lbl9, "O");}else {return ;}
                    if (compOn) {getBestChoise(lbl3, lbl5, lbl7, "O");}else {return ;}
        
                    if (compOn) {getBestChoise(lbl1, lbl2, lbl3, "X");}else {return ;}
                    if (compOn) {getBestChoise(lbl4, lbl5, lbl6, "X");}else {return ;}
                    if (compOn) {getBestChoise(lbl7, lbl8, lbl9, "X");}else {return ;}
                    if (compOn) {getBestChoise(lbl1, lbl4, lbl7, "X");}else {return ;}
                    if (compOn) {getBestChoise(lbl2, lbl5, lbl8, "X");}else {return ;}
                    if (compOn) {getBestChoise(lbl3, lbl6, lbl9, "X");}else {return ;}
                    if (compOn) {getBestChoise(lbl1, lbl5, lbl9, "X");}else {return ;}
                    if (compOn) {getBestChoise(lbl3, lbl5, lbl7, "X");}else {return ;}  
                }

                while (compOn) {
                    rand = new Random();
                    int randNo = rand.nextInt(9) + 1;
                    String lblName = "lbl" + randNo;
                    for (Component c : gamePanel.getComponents()) {
                        if (c instanceof JLabel) {
                            JLabel l = (JLabel) c;
                            if (l.getName().equals(lblName) & l.getText().equals("")) {
                                l.setText("O");
                                l.setForeground(Color.blue);
                                isFirstPlayerOn = true;
                                checkIsWinner();
                                compOn = false;
                            }
                        }
                    }
                }

            }
        }
    }

    // سنستخدم هذه الدالة في كل مرة يلعب فيها اللاعبون للتأكد إذا كان هناك فائز أم لا
    // لجعل لون خلفية المربعات التي كانت سبب فوز الاعب ملونة  setWinnerColor في حال كان يوجد فائز سيتم مناداة الدالة
    // لإيقاف اللعبة. و سيتم إضافة واحد في نتيجة اللاعب الفائز true إلى isGameEnds و لتغيير قيمة المتغير
    private void checkIsWinner() {
        String c1 = lbl1.getText();
        String c2 = lbl2.getText();
        String c3 = lbl3.getText();
        String c4 = lbl4.getText();
        String c5 = lbl5.getText();
        String c6 = lbl6.getText();
        String c7 = lbl7.getText();
        String c8 = lbl8.getText();
        String c9 = lbl9.getText();
        if (c1.equals(c2) & c1.equals(c3) & !c1.equals("")) {

            setWinnerColor(lbl1, lbl2, lbl3);

        }
        if (c4.equals(c5) & c4.equals(c6) & !c4.equals("")) {

            setWinnerColor(lbl4, lbl5, lbl6);

        }
        if (c7.equals(c8) & c7.equals(c9) & !c7.equals("")) {
            setWinnerColor(lbl7, lbl8, lbl9);
        }
        if (c1.equals(c4) & c1.equals(c7) & !c1.equals("")) {

            setWinnerColor(lbl1, lbl4, lbl7);

        }
        if (c2.equals(c5) & c2.equals(c8) & !c2.equals("")) {

            setWinnerColor(lbl2, lbl5, lbl8);

        }
        if (c3.equals(c6) & c3.equals(c9) & !c3.equals("")) {

            setWinnerColor(lbl3, lbl6, lbl9);

        }
        if (c1.equals(c5) & c1.equals(c9) & !c1.equals("")) {

            setWinnerColor(lbl1, lbl5, lbl9);

        }
        if (c3.equals(c5) & c3.equals(c7) & !c3.equals("")) {

            setWinnerColor(lbl3, lbl5, lbl7);

        }
        jPanel1.repaint();
        XOcounter += 1;
        lblXO.setText(Integer.toString(XOcounter));
        if (XOcounter == 9 & isGameEnd == false) {
            JOptionPane.showMessageDialog(null, "No Winner");
            resetLbls();
        }
    }

    private void changeScore(String c) {
        if (c.equals("X")) {
            int scorX = Integer.parseInt(lblScorX.getText()) + 1;
            lblScorX.setText(Integer.toString(scorX));
            isFirstPlayerOn = true; // make who win Start the new game
            lblFplayer.setOpaque(true);
            lblSplayer.setOpaque(false);
        } else {
            int scorO = Integer.parseInt(lblScorO.getText()) + 1;
            lblScorO.setText(Integer.toString(scorO));
            isFirstPlayerOn = false;
            lblFplayer.setOpaque(false);
            lblSplayer.setOpaque(true);
        }
    }

    private void setWinnerColor(JLabel l1, JLabel l2, JLabel l3) {
        l1.setBackground(Color.yellow);
        l2.setBackground(Color.yellow);
        l3.setBackground(Color.yellow);
        // عند تغيير Opaque تظهر الخلفية الصفرا
        l1.setOpaque(true);
        l2.setOpaque(true);
        l3.setOpaque(true);
        if (isScorAdd == false) {
            changeScore(l1.getText());
            isScorAdd = true;
        }
        isGameEnd = true;
    }

    private void resetLbls() {
        lbl1.setText("");
        lbl2.setText("");
        lbl3.setText("");
        lbl4.setText("");
        lbl5.setText("");
        lbl6.setText("");
        lbl7.setText("");
        lbl8.setText("");
        lbl9.setText("");

        lbl1.setOpaque(false);
        lbl2.setOpaque(false);
        lbl3.setOpaque(false);
        lbl4.setOpaque(false);
        lbl5.setOpaque(false);
        lbl6.setOpaque(false);
        lbl7.setOpaque(false);
        lbl8.setOpaque(false);
        lbl9.setOpaque(false);
        lblXO.setText("0");

        XOcounter = 0;
        isGameEnd = false;
        isScorAdd = false;
    }

    private void labelSetNames() {
        lbl1.setName("lbl1");
        lbl2.setName("lbl2");
        lbl3.setName("lbl3");
        lbl4.setName("lbl4");
        lbl5.setName("lbl5");
        lbl6.setName("lbl6");
        lbl7.setName("lbl7");
        lbl8.setName("lbl8");
        lbl9.setName("lbl9");
    }

    private void getBestChoise(JLabel l1, JLabel l2, JLabel l3, String i) {
        if (l1.getText().equals(i) & l2.getText().equals(i) & l3.getText().equals("")) {
            l3.setText("O");
            l3.setForeground(Color.blue);
            isFirstPlayerOn = true;
            checkIsWinner();
            compOn = false;
            
        }else if(l1.getText().equals(i) & l3.getText().equals(i) & l2.getText().equals("")) {
            l2.setText("O");
            l2.setForeground(Color.blue);
            isFirstPlayerOn = true;
            checkIsWinner();
            compOn = false;
        }else if(l2.getText().equals(i) & l3.getText().equals(i) & l1.getText().equals("")) {
            l1.setText("O");
            l1.setForeground(Color.blue);
            isFirstPlayerOn = true;
            checkIsWinner();
            compOn = false;
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRestart;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lbl4;
    private javax.swing.JLabel lbl5;
    private javax.swing.JLabel lbl6;
    private javax.swing.JLabel lbl7;
    private javax.swing.JLabel lbl8;
    private javax.swing.JLabel lbl9;
    private javax.swing.JLabel lblFplayer;
    private javax.swing.JLabel lblScorO;
    private javax.swing.JLabel lblScorX;
    private javax.swing.JLabel lblSplayer;
    private javax.swing.JLabel lblXO;
    private javax.swing.JLabel lbltype;
    // End of variables declaration//GEN-END:variables
}
